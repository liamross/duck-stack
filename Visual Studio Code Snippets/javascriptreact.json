{
  "React-Redux Stateful Container Template": {
    "prefix": "duckcontainerstateful",
    "body": [
      "import React, { Component } from 'react'",
      "import PropTypes from 'prop-types'",
      "import { connect } from 'react-redux'",
      "import ${1:ComponentName} from './component'",
      "import * as actions from './actions'",
      "",
      "class ${2:ContainerName} extends React.Component {",
      "\tcomponentWillMount() {",
      "\t\t$3",
      "\t}",
      "",
      "\trender() {",
      "\t\treturn (",
      "\t\t\t<${1:ComponentName} $0/>",
      "\t\t)",
      "\t}",
      "}",
      "",
      "${2:ContainerName}.defaultProps = {",
      "\t$6",
      "}",
      "",
      "${2:ContainerName}.propTypes = {",
      "\t$7",
      "}",
      "",
      "const mapStateToProps = (state, ownProps) => ({",
      "\t$8",
      "})",
      "",
      "const mapDispatchToProps = dispatch => ({",
      "\t$9",
      "})",
      "",
      "export default connect(mapStateToProps, mapDispatchToProps)(${2:ContainerName})",
      ""
    ],
    "description": "React-Redux Stateful Container Template. Handles pre-render firing of componentWillMount and Redux."
  },
  "React-Redux Stateless Container Template": {
    "prefix": "duckcontainerstateless",
    "body": [
      "import React from 'react'",
      "import PropTypes from 'prop-types'",
      "import { connect } from 'react-redux'",
      "import ${1:ComponentName} from './component'",
      "import * as actions from './actions'",
      "",
      "const ${2:ContainerName} = ({ ${3:props} }) => (",
      "\t<${1:ComponentName} $0/>",
      ")",
      "",
      "${2:ContainerName}.defaultProps = {",
      "\t$6",
      "}",
      "",
      "${2:ContainerName}.propTypes = {",
      "\t$7",
      "}",
      "",
      "const mapStateToProps = (state, ownProps) => ({",
      "\t$8",
      "})",
      "",
      "const mapDispatchToProps = dispatch => ({",
      "\t$9",
      "})",
      "",
      "export default connect(mapStateToProps, mapDispatchToProps)(${2:ContainerName})",
      ""
    ],
    "description": "React-Redux Stateless Container Template. Returns JSX contents and handles Redux."
  },
  "Duck-stack Index File": {
    "prefix": "duckindex",
    "body": [
      "import * as actions from './actions'",
      "import * as actiontypes from './actiontypes'",
      "import component from './container'",
      "import reducer from './reducer'",
      "import * as sagas from './sagas'",
      "",
      "export default { actions, actiontypes, component, reducer, sagas }",
      ""
    ],
    "description": "Duck-stack Index File. Imports all elements of a module and exports as a default object."
  },
  "Redux Reducer Template": {
    "prefix": "duckreducer",
    "body": [
      "import * as types from './actiontypes'",
      "",
      "const defaultState = ${1:[]}",
      "",
      "const reducer = (state = defaultState, action) => {",
      "\tswitch (action.type) {",
      "\t\tcase types.${2:actionType}:",
      "\t\t\treturn state$0",
      "\t\tdefault:",
      "\t\t\treturn state",
      "\t}",
      "}",
      "",
      "export default reducer",
      ""
    ],
    "description": "Redux Reducer Template. Imports action types and exports as default."
  },
  "React Component": {
    "prefix": "duckcomponent",
    "body": [
      "import React from 'react'",
      "import PropTypes from 'prop-types'",
      "",
      "const ${1:ComponentName} = ({ ${2:props} }) => (",
      "\t$0",
      ")",
      "",
      "${1:ComponentName}.defaultProps = {",
      "\t$3",
      "}",
      "",
      "${1:ComponentName}.propTypes = {",
      "\t$4",
      "}",
      "",
      "export default ${1:ComponentName}",
      ""
    ],
    "description": "React Component. View component, can accept props from a Redux-connected container."
  },
  "Redux Saga Template": {
    "prefix": "ducksaga",
    "body": [
      "import { call, put } from 'redux-saga/effects'",
      "import { ${2:apiFetchFunction} } from '${3:pathToApi}'",
      "import * as actions from './actions'",
      "",
      "export function* ${1:sagaName}(action) {",
      "\ttry {",
      "\t\tconst value = yield call(${2:apiFetchFunction}, action.url)",
      "\t\tyield put(types.${4:successAction(value)})$0",
      "\t} catch (error) {",
      "\t\tyield put(types.${5:failureAction(error)})",
      "\t}",
      "}",
      ""
    ],
    "description": "Redux Saga Template. Basic saga function for dispatching async actions."
  },
  "Redux Action Types Template": {
    "prefix": "duckactiontypes",
    "body": [
      "// Reducer action types.",
      "export const ${1:ACTION_TYPE} = '${2:componentName}/${1:ACTION_TYPE}'",
      "$0",
      "// Saga action types.",
      "export const ${3:SAGA_ACTION_TYPE} = '${2:componentName}/${3:SAGA_ACTION_TYPE}'",
      "",
      "// Saga action receivers.",
      "export const ${3:SAGA_ACTION_TYPE}_SUCCESS = '${2:componentName}/${3:SAGA_ACTION_TYPE}_SUCCESS'",
      "export const ${3:SAGA_ACTION_TYPE}_FAILURE = '${2:componentName}/${3:SAGA_ACTION_TYPE}_FAILURE'",
      ""
    ],
    "description": "Redux Action Types Template. File for Action Type creation and export."
  },
  "Redux Actions Template": {
    "prefix": "duckactions",
    "body": [
      "import * as types from './actiontypes'",
      "",
      "// Reducer actions.",
      "export const ${1:actionCreatorName} = ${2:value} => ({",
      "\ttype: types.${3:ACTION_TYPE},",
      "\t${2:value},",
      "})",
      "$0",
      "// Saga actions.",
      "export const ${4:sagaActionCreatorName} = ${5:url} => ({",
      "\ttype: types.${6:SAGA_ACTION_TYPE},",
      "\t${4:url},",
      "})"
    ],
    "description": "Redux Actions Template. File for Action creation and export."
  }
}
